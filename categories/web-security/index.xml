<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>web security - Category - 凌虚 Blog</title><link>https://rifewang.github.io/categories/web-security/</link><description>web security - Category - 凌虚 Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)</copyright><lastBuildDate>Thu, 12 Aug 2021 10:58:20 +0800</lastBuildDate><atom:link href="https://rifewang.github.io/categories/web-security/" rel="self" type="application/rss+xml"/><item><title>web 安全系列文章【译文】</title><link>https://rifewang.github.io/web-security/</link><pubDate>Thu, 12 Aug 2021 10:58:20 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/web-security/</guid><description>Cross-site request forgery (CSRF) CSRF XSS vs CSRF CSRF tokens SameSite cookies Clickjacking (UI redressing) Clickjacking (UI redressing) Cross-origin resource sharing (CORS) CORS Same-origin policy (SOP) Access-control-allow-origin Server-side request forgery (SSRF) Server-side request forgery (SSRF) Blind SSRF vulnerabilities HTTP request smuggling HTTP request smuggling Finding HTTP request smuggling vulnerabilities Exploiting HTTP request smuggling vulnerabilities OS command injectionn OS command injection Server-side template injection Server-side template injection Exploiting server-side template injection</description></item><item><title>web 安全之 Server-side template injection</title><link>https://rifewang.github.io/translation/web-security/server-side-template-injection/server-side-template-injection/</link><pubDate>Wed, 10 Mar 2021 01:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/server-side-template-injection/server-side-template-injection/</guid><description>Server-side template injection 在本节中，我们将介绍什么是服务端模板注入，并概述利用此漏洞的基本方法，同时也将提供一些避免此漏洞的建议。 什么是服务端模板注入 服务端模板</description></item><item><title>Exploiting server-side template injection vulnerabilities</title><link>https://rifewang.github.io/translation/web-security/server-side-template-injection/exploiting-server-side-template-injection-vulnerabilities/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/server-side-template-injection/exploiting-server-side-template-injection-vulnerabilities/</guid><description>利用服务端模板注入漏洞 在本节中，我们将更仔细地了解一些典型的服务端模板注入漏洞，并演示如何利用之前归纳的方法。通过付诸实践，你可以潜在地发现</description></item><item><title>web 安全之 CSRF</title><link>https://rifewang.github.io/translation/web-security/csrf/csrf/</link><pubDate>Tue, 09 Mar 2021 01:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/csrf/csrf/</guid><description>Cross-site request forgery (CSRF) 在本节中，我们将解释什么是跨站请求伪造，并描述一些常见的 CSRF 漏洞示例，同时说明如何防御 CSRF 攻击。 什么是 CSRF 跨站请求伪造（CSRF）是一种 web</description></item><item><title>CSRF tokens</title><link>https://rifewang.github.io/translation/web-security/csrf/csrf-tokens/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/csrf/csrf-tokens/</guid><description>CSRF tokens 在本节中，我们将解释什么是 CSRF token，它们是如何防御的 CSRF 攻击，以及如何生成和验证CSRF token 。 什么是 CSRF token CSRF token 是一个唯一的、秘密的、不可预</description></item><item><title>SameSite cookies</title><link>https://rifewang.github.io/translation/web-security/csrf/samesite-cookies/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/csrf/samesite-cookies/</guid><description>SameSite cookies 某些网站使用 SameSite cookies 防御 CSRF 攻击。 这个 SameSite 属性可用于控制是否以及如何在跨站请求中提交 cookie 。通过设置会话 cookie 的属性，应用程序可以防止浏览器默认自动向请</description></item><item><title>XSS vs CSRF</title><link>https://rifewang.github.io/translation/web-security/csrf/xss-vs-csrf/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/csrf/xss-vs-csrf/</guid><description>XSS vs CSRF 在本节中，我们将解释 XSS 和 CSRF 之间的区别，并讨论 CSRF token 是否有助于防御 XSS 攻击。 XSS 和 CSRF 之间有啥区别 跨站脚本攻击 XSS 允许攻击者在受害者用户的浏览器中</description></item><item><title>web 安全之 DOM-based vulnerabilities</title><link>https://rifewang.github.io/translation/web-security/dom-based/dom-based-vulnerabilities/</link><pubDate>Sun, 07 Mar 2021 01:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/dom-based/dom-based-vulnerabilities/</guid><description>DOM-based vulnerabilities 在本节中，我们将描述什么是 DOM ，解释对 DOM 数据的不安全处理是如何引入漏洞的，并建议如何在您的网站上防止基于 DOM 的漏洞。 什么是 DOM Document Object Model（</description></item><item><title>DOM clobbering</title><link>https://rifewang.github.io/translation/web-security/dom-based/dom-clobbering/</link><pubDate>Sun, 07 Mar 2021 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/dom-based/dom-clobbering/</guid><description>DOM clobbering 在本节中，我们将描述什么是 DOM clobbing ，演示如何使用 clobbing 技术来利用 DOM 漏洞，并提出防御 DOM clobbing 攻击的方法。 什么是 DOM clobbering DOM clobbering 是一种将 HTML 注入页面以操作 DOM 并最终</description></item><item><title>web 安全之 HTTP Host header attacks</title><link>https://rifewang.github.io/translation/web-security/http-host-header-attacks/http-host-header-attacks/</link><pubDate>Sat, 06 Mar 2021 01:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/translation/web-security/http-host-header-attacks/http-host-header-attacks/</guid><description>HTTP Host header attacks 在本节中，我们将讨论错误的配置和有缺陷的业务逻辑如何通过 HTTP Host 头使网站遭受各种攻击。我们将概述识别易受 HTTP Host 头攻击的网站的高级方法，并演</description></item></channel></rss>