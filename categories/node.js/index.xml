<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Node.js - Category - 凌虚 Blog</title><link>https://rifewang.github.io/categories/node.js/</link><description>Node.js - Category - 凌虚 Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 18 Sep 2019 19:15:57 +0800</lastBuildDate><atom:link href="https://rifewang.github.io/categories/node.js/" rel="self" type="application/rss+xml"/><item><title>从 V8 优化看高效 JavaScript【译】</title><link>https://rifewang.github.io/efficient-js-from-v8-optimization/</link><pubDate>Wed, 18 Sep 2019 19:15:57 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/efficient-js-from-v8-optimization/</guid><description>文本翻译自: https://blog.logrocket.com/how-javascript-works-optimizing-the-v8-compiler-for-efficiency 理解 JavaScript 是如何工作的对于编写高效的 JS 大有帮助。 V8 执行 JS 分为三个阶段： 源代码转换为 AST 抽象语法树。 语法树转换为字节码：这个过程由 V8 的</description></item></channel></rss>