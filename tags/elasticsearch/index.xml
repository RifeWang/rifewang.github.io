<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Elasticsearch - Tag - 凌虚 Blog</title><link>https://rifewang.github.io/tags/elasticsearch/</link><description>Elasticsearch - Tag - 凌虚 Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)</copyright><lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://rifewang.github.io/tags/elasticsearch/" rel="self" type="application/rss+xml"/><item><title>Elasticsearch 向量搜索</title><link>https://rifewang.github.io/es-vector-search/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/es-vector-search/</guid><description>Elasticsearch 向量搜索 本文将会介绍 Elasticsearch 向量搜索的两种方式。 向量搜索 提到向量搜索，我想你一定想知道： 向量搜索是什么？ 向量搜索的应用场景有哪些？ 向量搜索与全文</description></item><item><title>Elasticsearch 分布式搜索的运行机制</title><link>https://rifewang.github.io/es-distribute-search-steps/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/es-distribute-search-steps/</guid><description>Elasticsearch 分布式搜索的运行机制 ES 有两种 search_type 即搜索类型： query_then_fetch （默认） dfs_query_then_fetch query_then_fetch 用户发起搜索，请求到集群中的某个节点。 query 会被发送到所有相关的 shard 分片上。 每个 shard 分片独</description></item><item><title>Elasticsearch Search Template</title><link>https://rifewang.github.io/es-search-template/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/es-search-template/</guid><description>Elasticsearch Search Template 所谓 search template 搜索模板其实就是： 预先定义好查询语句 DSL 的结构并预留参数 搜索的时再传入参数值 渲染出完整的 DSL ，最后进行搜索 使用搜索模板可以将 DSL 从应</description></item><item><title>构造请求日志分析系统</title><link>https://rifewang.github.io/log-analyzer-system/</link><pubDate>Sat, 07 Nov 2020 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/log-analyzer-system/</guid><description>构造请求日志分析系统 请求日志记录哪些数据 time_local : 请求的时间 remote_addr : 客户端的 IP 地址 request_method : 请求方法 request_schema : 请求协议，常见的 http 和 https request_host : 请求的域名 request_path : 请求的 path 路径</description></item><item><title>Elasticsearch 自定义打分 Function score query</title><link>https://rifewang.github.io/es-function-score-query/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/es-function-score-query/</guid><description>Elasticsearch 自定义打分 Function score query Elasticsearch 会为 query 的每个文档计算一个相关度得分 score ，并默认按照 score 从高到低的顺序返回搜索结果。 在很多场景下，我们不仅需要搜索到匹配的结果</description></item><item><title>数据管道 Logstash 入门</title><link>https://rifewang.github.io/logstash/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/logstash/</guid><description>Logstash 入门 Logstash 是什么 Logstash 就是一个开源的数据流工具，它会做三件事： 从数据源拉取数据 对数据进行过滤、转换等处理 将处理后的数据写入目标地 例如： 监听某个目录</description></item><item><title>Elasticsearch 入门指南</title><link>https://rifewang.github.io/es-guide/</link><pubDate>Sun, 29 Jul 2018 16:24:53 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/es-guide/</guid><description>引言 Elasticsearch 是什么？一个开源的可扩展、高可用、分布式的全文搜索引擎。 你为什么需要它？《人生一串》中有这样一段话： 没了烟火气，人生就是一段孤独的旅程</description></item></channel></rss>