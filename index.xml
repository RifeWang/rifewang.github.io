<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>凌虚 Blog</title><link>https://rifewang.github.io/</link><description>这是凌虚的博客网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)</copyright><lastBuildDate>Sat, 31 Aug 2024 17:09:40 +0800</lastBuildDate><atom:link href="https://rifewang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes 网关流量管理：Ingress 与 Gateway API</title><link>https://rifewang.github.io/k8s-ingress-vs-gateway/</link><pubDate>Sat, 31 Aug 2024 17:09:40 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-ingress-vs-gateway/</guid><description>引言 随着 Kubernetes 在云原生领域的广泛使用，流量管理成为了至关重要的一环。为了有效地管理从外部流入集群的流量，Kubernetes 提供了多种解决方案，</description></item><item><title>图解计算机网络：一条 HTTP 请求的网络拓扑之旅</title><link>https://rifewang.github.io/http-network-travel/</link><pubDate>Sat, 24 Aug 2024 13:24:29 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/http-network-travel/</guid><description>引言 常见的网络拓扑结构如下图所示： 在此拓扑中，终端设备通过 WiFi 连接到路由器，路由器再连接到光猫（或终端设备通过移动网络 4G/5G 连接到基站），之后 ISP 网</description></item><item><title>DDIA 分布式数据的分区与复制 - 基于 Redis、Kafka、Elasticsearch 的深入分析</title><link>https://rifewang.github.io/ddia-partition-replication-redis-kafka-es/</link><pubDate>Thu, 22 Aug 2024 15:05:53 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/ddia-partition-replication-redis-kafka-es/</guid><description>引言 本文基于《Designing Data-Intensive Applications》一书（设计数据密集型应用，简称 DDIA），深入探讨了 Redis、Kafka 和 Elasticsearch 等</description></item><item><title>典型系统架构的百万并发理论分析</title><link>https://rifewang.github.io/million-qps-system/</link><pubDate>Thu, 15 Aug 2024 17:06:40 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/million-qps-system/</guid><description>引言 本文将会描述一个典型的系统架构，然后分析其在理论上是否能够支撑百万并发的请求。 典型系统架构及分析 为了降低复杂性，笔者将系统简化为了下图所</description></item><item><title>Redis 全文检索及使用示例</title><link>https://rifewang.github.io/redis-full-text/</link><pubDate>Mon, 15 Jul 2024 22:11:09 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/redis-full-text/</guid><description>序言 Redis 除了我们所熟知的缓存功能之外，还通过 RedisJSON、RediSearch、RedisTimeSeries、RedisBloom 等模</description></item><item><title>Redis 向量搜索</title><link>https://rifewang.github.io/redis-vector/</link><pubDate>Tue, 09 Jul 2024 20:30:47 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/redis-vector/</guid><description>序言 Redis 除了我们所熟知的缓存功能之外，还通过 RedisJSON、RediSearch、RedisTimeSeries、RedisBloom 等模</description></item><item><title>以图搜图架构优化：使用客户端模型提取图像特征</title><link>https://rifewang.github.io/image-search-use-client-model/</link><pubDate>Thu, 04 Jul 2024 14:44:38 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/image-search-use-client-model/</guid><description>序言 以图搜图系统指的是从图像内容提取特征向量，然后使用向量数据库进行向量数据的插入、删除、相似性检索等操作，进而提供根据图像内容搜索出具有相</description></item><item><title>Kubernetes scheduler 概述及自定义调度器</title><link>https://rifewang.github.io/k8s-custom-scheduler/</link><pubDate>Sat, 15 Jun 2024 20:04:06 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-custom-scheduler/</guid><description>kube-scheduler kube-scheduler 是 k8s 集群中控制平面的一个重要组件，其负责的工作简单且专一：给未分配的 pod 分配一个 node 节点。 调度器的大致工作过程可以分为以下几步： 监听到未绑定</description></item><item><title>Kubernetes Service 与 long-lived connections</title><link>https://rifewang.github.io/k8s-service-long-lived-connection/</link><pubDate>Wed, 12 Jun 2024 16:14:46 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-service-long-lived-connection/</guid><description>本文将会介绍： 从 pod 到 service 再到 pod，kubernetes 中的流量是怎么走的？ 对于 long-lived connection 长连接又是怎样的情况？ 从 pod 到 service 再到 pod 如上图所示： 1、我们先</description></item><item><title>我的 2024 年 Elasticsearch 认证考试经验与真题回顾</title><link>https://rifewang.github.io/2024-ece/</link><pubDate>Sun, 17 Mar 2024 22:18:54 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/2024-ece/</guid><description>背景说明 大家好，我是凌虚。 我于 2024 年 3 月 14 日参加了 Elastic Certified Engineer（ECE）认证考试，并与 18 日收到了考试通过的邮件。本文将会回顾我的考试过</description></item></channel></rss>