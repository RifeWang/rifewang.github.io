<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>凌虚 Blog</title><link>https://rifewang.github.io/</link><description>这是凌虚的博客网站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)</copyright><lastBuildDate>Sat, 30 Dec 2023 16:38:11 +0800</lastBuildDate><atom:link href="https://rifewang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes 外部 HTTP 请求到达 Pod 容器的全过程</title><link>https://rifewang.github.io/http-flow-to-container/</link><pubDate>Sat, 30 Dec 2023 16:38:11 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/http-flow-to-container/</guid><description>Kubernetes 集群外部的 HTTP/HTTPS 请求是如何达到 Pod 中的 container 的？ HTTP 请求流转过程概述 如上图所示，全过程大致为： 用户从 web/mobile/pc 等客户端发出 HTTP/HTTPS 请求。 由于应用服务通常是通过域名的</description></item><item><title>Kubernetes Lease 及分布式选主</title><link>https://rifewang.github.io/lease/</link><pubDate>Tue, 26 Dec 2023 11:42:30 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/lease/</guid><description>分布式选主 在分布式系统中，应用服务常常会通过多个节点（或实例）的方式来保证高可用。然而在某些场景下，有些数据或者任务无法被并行操作，此时就需</description></item><item><title>Kubernetes 从提交 deployment 到 pod 运行的全过程</title><link>https://rifewang.github.io/k8s-from-deploy-to-pod/</link><pubDate>Sat, 23 Dec 2023 18:26:15 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-from-deploy-to-pod/</guid><description>当用户向 Kubernetes 提交了一个创建 deployment 的请求后，Kubernetes 从接收请求直至创建对应的 pod 运行这整个过程中都发生了什么呢？ kubernetes 架构简述 在搞清楚从 deployment 提交</description></item><item><title>Kubernetes CRD &amp; Operator 简介</title><link>https://rifewang.github.io/k8s-crd-operator/</link><pubDate>Tue, 19 Dec 2023 10:37:48 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-crd-operator/</guid><description>Kubernetes CRD 在 kubernetes 中有一系列内置的资源，诸如：pod、deployment、configmap、service …… 等等，它们由 k8s 的内部组件管理。而除了</description></item><item><title>容器运行时的内部结构和最新趋势（2023）</title><link>https://rifewang.github.io/the-internals-and-the-latest-trends-of-container-runtimes/</link><pubDate>Tue, 11 Jul 2023 10:07:05 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/the-internals-and-the-latest-trends-of-container-runtimes/</guid><description>容器运行时的内部结构和最新趋势（2023） 原文为 Akihiro Suda 在日本京都大学做的在线讲座，完整的 PPT 可 点击此处下载 本文内容分为以下三个部分： 容器简介 容器</description></item><item><title>Java 应用程序在 Kubernetes 上棘手的内存管理</title><link>https://rifewang.github.io/k8s-memory-management-for-java-applications/</link><pubDate>Sun, 23 Apr 2023 15:17:18 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-memory-management-for-java-applications/</guid><description>引言 如何结合使用 JVM Heap 堆和 Kubernetes 内存的 requests 和 limits 并远离麻烦。 在容器环境中运行 Java 应用程序需要了解两者 —— JVM 内存机制和 Kubernetes 内存管理。这两个环境一起工作会产生</description></item><item><title>Kubernetes Admission Controller 简介 - 注入 sidacar 示例</title><link>https://rifewang.github.io/k8s-admission-controller-sidacar-example/</link><pubDate>Sun, 16 Apr 2023 14:22:36 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-admission-controller-sidacar-example/</guid><description>Admission Controller Kubernetes Admission Controller（准入控制器）是什么？ 如下图所示： 当我们向 k8s api-server 提交了请求之后，需要经过认证鉴权、mutation admissio</description></item><item><title>什么？修改 JSON 内容居然还有个 JSON PATCH 标准</title><link>https://rifewang.github.io/rfc6902-json-patch/</link><pubDate>Fri, 07 Apr 2023 11:27:16 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/rfc6902-json-patch/</guid><description>引言 你一定知道 JSON 吧，那专门用于修改 JSON 内容的 JSON PATCH 标准你是否知道呢？ RFC 6902 就定义了这么一种 JSON PATCH 标准，本文将对其进行介绍。 JSON PATCH JSON Patch 本身也是一种 JSON 文档</description></item><item><title>我们为何选择 Cilium 作为 Kubernetes 的网络接口</title><link>https://rifewang.github.io/why-cilium-for-k8s/</link><pubDate>Mon, 03 Apr 2023 15:12:11 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/why-cilium-for-k8s/</guid><description>文本翻译自: https://blog.palark.com/why-cilium-for-kubernetes-networking/ 原文作者是 Palark 平台工程师 Anton Kuliashov，其说明了选择 Cilium 作为 Kubernetes 网络接口的原因以及喜爱 Cilium 的地方。 多亏了 CNI（容器网络接口），</description></item><item><title>在 Kubernetes 中应该如何设置 CPU 的 requests 和 limits</title><link>https://rifewang.github.io/k8s-cpu-request-limit/</link><pubDate>Fri, 31 Mar 2023 16:11:20 +0800</pubDate><author>凌虚</author><guid>https://rifewang.github.io/k8s-cpu-request-limit/</guid><description>文本翻译自: https://itnext.io/cpu-limits-and-requests-in-kubernetes-fa9d55948b7c 在 Kubernetes 中，我应该如何设置 CPU 的 requests 和 limits？ 热门答案包括： 始终使用 limits ! 永远不要使用 limits，只使用 requests ! 都不用；可以吗？ 让我</description></item></channel></rss>